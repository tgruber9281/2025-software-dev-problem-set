Java Answer

class Solution {
            public int[] twoSum(int[] nums, int target) {
                Map<Integer,Integer> numMap = new HashMap<>();
                for (int i = 0; i < nums.length; i++) {
                    numMap.put(nums[i],i);
                }
                for (int i = 0; i < nums.length; i++) {
                    int complement = target-nums[i];
                    if (numMap.containsKey(complement) && numMap.get(complement) != i) {
                        
                        return new int[] {i, numMap.get(complement)};
                    }
                }
                return new int[]{};
            }
        }

JavaScript Answer

/**
 * @param {number[]} nums
 * @param {number} target
 * @return {number[]}
 */
var twoSum = function(nums, target) {
    for (i = 0; i < nums.length; i++) {
      for (j = i+1; j < nums.length; j ++) {
        if (nums[i] + nums[j] == target){
          return [i,j];
        }
      }
  }  
};
